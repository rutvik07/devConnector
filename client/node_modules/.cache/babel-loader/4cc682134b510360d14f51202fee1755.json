{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //LOAD USER\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //Register User\n\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post('/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n}; //Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //Logout /Clear Profile\n\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/rutvi/OneDrive/Desktop/Rutvik/WebDevlopment/Projects/Mern/Dev_repo/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert } from './alert'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\n//LOAD USER\r\n\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token)\r\n    }\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        });\r\n  }\r\n}\r\n\r\n//Register User\r\nexport const register = ({name,email,password}) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({name,email,password});\r\n\r\n    try {\r\n        const res = await axios.post('/api/users',body,config);\r\n        dispatch({\r\n            type:REGISTER_SUCCESS,\r\n            payload:res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error=>dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n\r\n         dispatch({\r\n             type:REGISTER_FAIL\r\n         });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//Login User\r\nexport const login = (email,password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({email,password});\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth',body,config);\r\n        dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload:res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error=>dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n\r\n         dispatch({\r\n             type:LOGIN_FAIL\r\n         });\r\n    }\r\n\r\n}\r\n\r\n//Logout /Clear Profile\r\nexport const logout = () => async dispatch => {\r\n    dispatch({type:LOGOUT})\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}