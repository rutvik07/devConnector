{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutvi\\\\OneDrive\\\\Desktop\\\\Rutvik\\\\WebDevlopment\\\\Projects\\\\Mern\\\\DevConnector\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setAlert,\n    register,\n    isAuthenticated\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Password do not match!', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n      console.log(formData);\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this), \" Create Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          value: password2,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"Y9SCaMNOZsII6MSseIHsbbTSn3A=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/rutvi/OneDrive/Desktop/Rutvik/WebDevlopment/Projects/Mern/DevConnector/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","Redirect","setAlert","register","PropTypes","Register","isAuthenticated","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","console","log","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React,{Fragment,useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link,Redirect} from 'react-router-dom'; \r\nimport {setAlert} from '../../actions/alert'\r\nimport {register} from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nconst Register = ({setAlert,register,isAuthenticated}) => {\r\n\r\n    const [formData,setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n\r\n    const {name,email,password,password2} = formData;\r\n\r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    const onSubmit = async e =>{\r\n        e.preventDefault();\r\n        if(password!==password2){\r\n            setAlert('Password do not match!','danger')\r\n        }else\r\n        {\r\n            register({name,email,password})\r\n            console.log(formData)\r\n        }\r\n    }\r\n\r\n    if(isAuthenticated){\r\n      return <Redirect to='/dashboard'/>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n             <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n      <form className=\"form\" onSubmit= {e => onSubmit(e) }>\r\n        <div className=\"form-group\">\r\n          <input\r\n           type=\"text\"\r\n             placeholder=\"Name\"\r\n             name=\"name\" \r\n             value={name}\r\n             onChange={e=> onChange(e)}\r\n             />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input \r\n          type=\"email\"\r\n          placeholder=\"Email Address\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={e=> onChange(e)}\r\n          />\r\n          \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e=> onChange(e)}\r\n            \r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={e=> onChange(e)}\r\n            \r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated:PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated:state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps,{setAlert,register})(Register);"]},"metadata":{},"sourceType":"module"}