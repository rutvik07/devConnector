{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutvi\\\\OneDrive\\\\Desktop\\\\Rutvik\\\\WebDevlopment\\\\Projects\\\\Mern\\\\DevConnector\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    getCurrentProfile,\n    auth: {\n      user\n    },\n    profile: {\n      profile,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 42\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), \"Welcome\", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 55\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/rutvi/OneDrive/Desktop/Rutvik/WebDevlopment/Projects/Mern/DevConnector/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","user","profile","loading","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;;AAEA,MAAMC,SAAS,GAAG,QAA+D;AAAA;;AAAA,MAA9D;AAACD,IAAAA,iBAAD;AAAmBE,IAAAA,IAAI,EAAC;AAACC,MAAAA;AAAD,KAAxB;AAA+BC,IAAAA,OAAO,EAAC;AAACA,MAAAA,OAAD;AAASC,MAAAA;AAAT;AAAvC,GAA8D;AAE7ET,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,iBAAiB;AACpB,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAOK,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA9B,gBAA2C,QAAC,QAAD;AAAA,4BAC9C;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD8C,eAE9C;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,aAC2CD,IAAI,IAAIA,IAAI,CAACG,IADxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAF8C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlD;AAOH,CAbD;;GAAML,S;;KAAAA,S;AAeNA,SAAS,CAACM,SAAV,GAAsB;AAClBP,EAAAA,iBAAiB,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADhB;AAElBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD,UAFL;AAGlBL,EAAAA,OAAO,EAAEP,SAAS,CAACa,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAI;AAC7BV,EAAAA,IAAI,EAACU,KAAK,CAACV,IADkB;AAE7BE,EAAAA,OAAO,EAACQ,KAAK,CAACR;AAFe,CAAJ,CAA7B;;AAMA,eAAeN,OAAO,CAACa,eAAD,EAAiB;AAACX,EAAAA;AAAD,CAAjB,CAAP,CAA6CC,SAA7C,CAAf","sourcesContent":["import React,{Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../layout/Spinner';\r\nimport {getCurrentProfile} from '../../actions/profile'\r\n\r\nconst Dashboard = ({getCurrentProfile,auth:{user},profile:{profile,loading}}) => {\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    },[]);\r\n\r\n    return loading && profile === null ? <Spinner/> : <Fragment>\r\n        <h1 className='large text-primary'>Dashboard</h1>\r\n        <p className='lead'>\r\n            <i className='fas fa-user'></i>Welcome{user && user.name}\r\n        </p>\r\n    </Fragment>\r\n    \r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state=> ({\r\n    auth:state.auth,\r\n    profile:state.profile\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{getCurrentProfile})(Dashboard)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}