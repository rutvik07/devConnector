{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const body = JSON.stringify((name, email, password));\n\n    try {\n      const res = await axios.post('/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/rutvi/OneDrive/Desktop/Rutvik/WebDevlopment/Projects/Mern/DevConnector/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SACIC,gBADJ,EAEIC,aAFJ,QAGO,SAHP;AAKA,OAAO,MAAMC,QAAQ,GAAE;AAAA,MAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,GAAD;AAAA,SAA2B,MAAMC,QAAN,IAAkB;AAChE,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADG,KAAf;AAKH,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,EAAgBR,IAAI,EAACC,KAAD,EAAOC,QAA3B,EAAb;;AAEA,QAAI;AACA,YAAMO,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAwBJ,IAAxB,EAA6BF,MAA7B,CAAlB;AAEAD,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAACd,gBADA;AAELe,QAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,OAAD,CAAR;AAIA,KAPJ,CAQG,OAAOC,GAAP,EAAY;AAER,YAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,UAAGA,MAAH,EAAU;AACNA,QAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIf,QAAQ,CAACP,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAW,QAAX,CAAT,CAAhC;AACH;;AAELhB,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAACb;AADA,OAAD,CAAR;AAGF;AAED,GA7BsB;AAAA,CAAhB","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from './types'\r\n\r\nexport const register= ({name,email,password}) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-type':'application/json'\r\n    }\r\n } \r\n const body = JSON.stringify((name,email,password));\r\n\r\n try {\r\n     const res = await axios.post('/api/users',body,config)\r\n\r\n     dispatch({\r\n         type:REGISTER_SUCCESS,\r\n         payload:res.data\r\n     });\r\n    } \r\n    catch (err) {\r\n    \r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        \r\n    dispatch({\r\n        type:REGISTER_FAIL,\r\n    })\r\n }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}