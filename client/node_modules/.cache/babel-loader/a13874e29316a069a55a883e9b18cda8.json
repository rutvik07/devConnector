{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types'; //LOAD USER\n\nexport const loadUser = () => async dispatch => {\n  iuf();\n}; //Register User\n\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post('/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/rutvi/OneDrive/Desktop/Rutvik/WebDevlopment/Projects/Mern/DevConnector/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","loadUser","dispatch","iuf","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAwB,SAAxB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,QAKO,SALP,C,CAOA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5CC,EAAAA,GAAG;AACN,CAFM,C,CAIP;;AACA,OAAO,MAAMC,QAAQ,GAAG;AAAA,MAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,GAAD;AAAA,SAA2B,MAAML,QAAN,IAAkB;AACjE,UAAMM,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAgB;AADZ;AADG,KAAf;AAKA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,IAAD;AAAMC,MAAAA,KAAN;AAAYC,MAAAA;AAAZ,KAAf,CAAb;;AAEA,QAAI;AACA,YAAMM,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAW,YAAX,EAAwBJ,IAAxB,EAA6BF,MAA7B,CAAlB;AACAN,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAClB,gBADA;AAELmB,QAAAA,OAAO,EAACH,GAAG,CAACI;AAFP,OAAD,CAAR;AAIH,KAND,CAME,OAAOC,GAAP,EAAY;AAEV,YAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,UAAGA,MAAH,EAAU;AACNA,QAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAEpB,QAAQ,CAACN,QAAQ,CAAC0B,KAAK,CAACC,GAAP,EAAW,QAAX,CAAT,CAA9B;AACH;;AAEArB,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAACjB;AADA,OAAD,CAAR;AAGJ;AAEJ,GA3BuB;AAAA,CAAjB","sourcesContent":["import axios from 'axios';\r\nimport {setAlert } from './alert'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR\r\n} from './types';\r\n\r\n//LOAD USER\r\n\r\nexport const loadUser = () => async dispatch => {\r\n    iuf()\r\n}\r\n\r\n//Register User\r\nexport const register = ({name,email,password}) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({name,email,password});\r\n\r\n    try {\r\n        const res = await axios.post('/api/users',body,config);\r\n        dispatch({\r\n            type:REGISTER_SUCCESS,\r\n            payload:res.data\r\n        });\r\n    } catch (err) {\r\n\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error=>dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n\r\n         dispatch({\r\n             type:REGISTER_FAIL\r\n         });\r\n    }\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}